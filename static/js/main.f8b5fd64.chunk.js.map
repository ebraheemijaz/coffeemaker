{"version":3,"sources":["component/Header.jsx","component/CoffeeCard.jsx","component/data.js","component/Content.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","typographyStyles","flex","Header","props","classes","AppBar","position","Toolbar","Typography","className","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","CoffeeCard","Card","CardHeader","avatar","Avatar","src","data","avatarUrl","aria-label","action","IconButton","subheader","price","CardMedia","style","height","image","imageUrl","CardContent","variant","component","description","length","slice","Button","size","color","onClick","handlereadmore","CardActions","ButtonGroup","Content","useState","open","setOpen","settitle","setDescription","handleClose","Grid","container","spacing","map","each","item","sm","xs","key","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","App","direction","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f8b5fd64.chunk.js","sourcesContent":["import React from 'react'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport AcUnitRoundedIcon from '@material-ui/icons/AcUnitRounded'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    typographyStyles: {\r\n        flex: 1,\r\n    },\r\n}))\r\n\r\nfunction Header(props) {\r\n    const classes = useStyles()\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography className={classes.typographyStyles}>\r\n                    COFFEE MAKER\r\n                </Typography>\r\n                <AcUnitRoundedIcon />\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport Button from '@material-ui/core/Button'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\n\r\nimport ShareIcon from '@material-ui/icons/ShareOutlined'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n})\r\n\r\nfunction CoffeeCard(props) {\r\n    const classes = useStyles()\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar\r\n                        src={props.data.avatarUrl}\r\n                        aria-label=\"recipe\"\r\n                        className={classes.avatar}\r\n                    />\r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                        <ShareIcon />\r\n                    </IconButton>\r\n                }\r\n                title={props.data.title}\r\n                subheader={props.data.price}\r\n            />\r\n            <CardMedia\r\n                style={{ height: '250px' }}\r\n                image={props.data.imageUrl}\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {props.data.description.length > 72 ? (\r\n                        <>\r\n                            {props.data.description.slice(0, 72) + '...  '}\r\n                            <Button\r\n                                size=\"small\"\r\n                                style={{ color: 'blue' }}\r\n                                onClick={() =>\r\n                                    props.handlereadmore(\r\n                                        props.data.title,\r\n                                        props.data.description\r\n                                    )\r\n                                }\r\n                            >\r\n                                Read more\r\n                            </Button>\r\n                        </>\r\n                    ) : (\r\n                        props.data.description\r\n                    )}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <ButtonGroup\r\n                    size=\"small\"\r\n                    aria-label=\"small outlined button group\"\r\n                >\r\n                    <Button>BUY NOW</Button>\r\n                    <Button>Offer</Button>\r\n                </ButtonGroup>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CoffeeCard\r\n","export default [\r\n    {\r\n        title: 'Keurig K-Duo',\r\n        price: '$149.99',\r\n        description:\r\n            'Use both ground coffee and k-cup pods. Multiple brew sizes: brew an 8, 10, or 12-cup carafe and an 237, 296, or 355ml (8, 10, or 12 oz. ) cup ',\r\n        avatarUrl:\r\n            'https://upload.wikimedia.org/wikipedia/commons/e/e0/Keurig_Logo.png',\r\n        imageUrl:\r\n            'https://images-na.ssl-images-amazon.com/images/I/61-KUPluVYL._AC_SL1500_.jpg',\r\n    },\r\n    {\r\n        title: 'KRUPS Electric Spice',\r\n        price: '$19.99',\r\n        description:\r\n            'Large grinding capacity yields ground coffee for up to 12 cups of coffee',\r\n        avatarUrl:\r\n            'https://images-na.ssl-images-amazon.com/images/I/81CbxNLCHCL._AC_SL1500_.jpg',\r\n        imageUrl:\r\n            'https://images-na.ssl-images-amazon.com/images/I/71FhMLBP9XL._AC_SL1500_.jpg',\r\n    },\r\n    {\r\n        title: 'Hamilton Beach Flexbrew',\r\n        price: '$89.99',\r\n        description:\r\n            'No two coffee drinkers are the same â€“ so, the flexibility to customize how and what you brew is key. From fresh grounds to K-Cup pods, the Hamilton Beach FlexBrew 2-Way Coffee Maker gives you the options to please fans of all types of coffees.',\r\n        avatarUrl:\r\n            'https://images-na.ssl-images-amazon.com/images/I/81mjh5ZSu1L._AC_SL1500_.jpg',\r\n        imageUrl:\r\n            'https://images-na.ssl-images-amazon.com/images/I/818rz3CIaFL._AC_SL1500_.jpg',\r\n    },\r\n    {\r\n        title: 'Secura French Press',\r\n        price: '$36.48',\r\n        description:\r\n            '3-layered Stainless steel filter traps the smallest coffee grounds to produce an exceptional full-bodied flavor, filter is easy to disassemble and clean.',\r\n        avatarUrl:\r\n            'https://images-na.ssl-images-amazon.com/images/I/61u76aiQQsL._AC_SL1000_.jpg',\r\n        imageUrl:\r\n            'https://images-na.ssl-images-amazon.com/images/I/61XRMmXVwQL._AC_SL1500_.jpg',\r\n    },\r\n    {\r\n        title: 'Cafe Du Chateau French Press',\r\n        price: '$32.95',\r\n        description:\r\n            'We use double stainless steel screen filters on a durable plunger supported by a spring loaded base plate to seal the edges, followed by a final top lid strainer to give you a pure brew with no grounds unlike other cheap presses.',\r\n        avatarUrl:\r\n            'https://images-na.ssl-images-amazon.com/images/I/81BdxpiRtCL._AC_SL1500_.jpg',\r\n        imageUrl:\r\n            'https://images-na.ssl-images-amazon.com/images/I/81luUhz7ZlL._AC_SL1500_.jpg',\r\n    },\r\n    {\r\n        title: 'LIVINGbasics Single Serve Coffee Maker ',\r\n        price: '$37.99',\r\n        description:\r\n            'Brew with a single serve k-cup pod or ground coffee. Less than 14 cm (5.5\") wide slim design, its the perfect size for any space.',\r\n        avatarUrl:\r\n            'https://images-na.ssl-images-amazon.com/images/I/61PGHBLkl8L._AC_SL1500_.jpg',\r\n        imageUrl:\r\n            'https://images-na.ssl-images-amazon.com/images/I/61KBB8K1wDL._AC_SL1000_.jpg',\r\n    },\r\n]\r\n","import React, { useState } from 'react'\r\nimport CoffeeCard from './CoffeeCard'\r\nimport { Grid } from '@material-ui/core'\r\nimport data from './data'\r\n\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nfunction Content(props) {\r\n    const [open, setOpen] = useState(false)\r\n    const [title, settitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const handlereadmore = (title, description) => {\r\n        setOpen(true)\r\n        settitle(title)\r\n        setDescription(description)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n            {data.map((each) => (\r\n                <Grid item sm={4} xs={12} key={each.price}>\r\n                    <CoffeeCard\r\n                        data={each}\r\n                        handlereadmore={handlereadmore}\r\n                        handleClose={handleClose}\r\n                    />\r\n                </Grid>\r\n            ))}\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{description}</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","import React from 'react'\nimport './App.css'\nimport Grid from '@material-ui/core/Grid'\nimport Header from './component/Header'\nimport Content from './component/Content'\n\nfunction App() {\n    return (\n        <Grid container direction=\"column\">\n            <Grid item>\n                <Header />\n            </Grid>\n            <br></br>\n            <Grid item container>\n                <Grid item xs={false} sm={1} />\n                <Grid item xs={12} sm={10}>\n                    <Content />\n                </Grid>\n                <Grid item xs={false} sm={1} />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}